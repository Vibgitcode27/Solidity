{
  "address": "0xe4637000bEd7e01a737Ef7ea79579Ab230F7CA22",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OwnerError",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc32eea0ef0bd268f4b86b5490d9abca4d19b002490f9501b2c863b4c293d924d",
  "receipt": {
    "to": null,
    "from": "0x2b848d48f6C0239AB26DBC94a278e7E1451F7CbB",
    "contractAddress": "0xe4637000bEd7e01a737Ef7ea79579Ab230F7CA22",
    "transactionIndex": 64,
    "gasUsed": "879096",
    "logsBloom": "0x
    "blockHash": "0x5186a8ae0ecd96895929b7fcd459cea133e10ecb111b1490ea7cf2dc4cbe34a3",
    "transactionHash": "0xc32eea0ef0bd268f4b86b5490d9abca4d19b002490f9501b2c863b4c293d924d",
    "logs": [],
    "blockNumber": 5321986,
    "cumulativeGasUsed": "11584896",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "478de5968554b1bb4820d5f5d1910437",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OwnerError\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror OwnerError();\\n\\ncontract FundMe{\\n    using PriceConverter for uint256;\\n\\n    uint public constant minUSD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        // 1. How do we send ETH to this contract\\n        // require(getConversionRate(msg.value) >= minUSD   , \\\"Didn't send enough\\\"); // \\n        // Instead we can do \\n        require(msg.value.getConversionRate(priceFeed) >= minUSD , \\\"Didn't send enough\\\"); // Using library function here\\n        funders.push(msg.sender); \\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner{\\n        // require(msg.sender == owner , \\\"Sender is not owner\\\");\\n\\n        for (uint funderIndex ; funderIndex < funders.length; funderIndex ++) \\n        {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0; \\n        }\\n        // reset the array\\n        funders = new address[](0);\\n        // actually withdraw the funds\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // send \\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send Failed\\\");\\n        // call\\n        (bool callSuccess, /*bytes memory dataReturned*/) = payable(msg.sender).call{value : address(this).balance}(\\\"\\\");\\n        require(callSuccess , \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner , \\\"Sender is not owner\\\");\\n        if(msg.sender != owner)\\n        {\\n            revert OwnerError();\\n        }\\n        _;\\n    }\\n\\n    // What happens if someone sends ETH without calling any function\\n\\n    // Solidity has few special functions\\n    // receive()\\n    // fallabck()\\n\\n    receive() external payable {\\n        fund();\\n     }\\n\\n    fallback() external payable {\\n        fund();\\n     }\\n}\",\"keccak256\":\"0xa3478b3a515502bba1338b198e5c00ddcd4a54961d30ff6629c4eeca6a710856\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n\\n// All functions should be internal in library\\n\\n    function getLivePrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n            // Two things we need\\n            // ABI\\n            // Address 0x694AA1769357215DE4FAC081bf1f309aDC325306 ETH/USD\\n            (,int256 answer,,,) = priceFeed.latestRoundData(); // This will return price in USD\\n            return uint256(answer * 1e10);\\n    }\\n\\n    function getVersion() internal view returns(uint){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.decimals();\\n    }\\n\\n    function getConversionRate(uint ethAmount , AggregatorV3Interface priceFeed) internal view returns(uint){\\n        uint ethprice = getLivePrice(priceFeed);\\n        uint ethAmountInUsd = (ethAmount * ethprice) / 1e18; // (ethAmount * ethprice) will give a number with 32 decimal places so we divide it with 1e18\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xede07444d61982980ae2c806da3c0ba50991699d68e081af20f3d92d62e7c621\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f75380380610f758339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e1c806101596000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d5780633e47d6f3146100a4578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107aa565b610514565b6040516100d891906107f0565b60405180910390f35b3480156100ed57600080fd5b506100f661052c565b604051610103919061086a565b60405180910390f35b34801561011857600080fd5b50610121610552565b60405161012e9190610894565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108db565b610578565b6040516101759190610894565b60405180910390f35b34801561018a57600080fd5b506101936105b7565b6040516101a091906107f0565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c490919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610965565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610359576040517f0acc09c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040457600080828154811061037e5761037d610985565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fc906109e3565b91505061035c565b50600067ffffffffffffffff8111156104205761041f610a2c565b5b60405190808252806020026020018201604052801561044e5781602001602082028036833780820191505090505b50600090805190602001906104649291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048b90610a8c565b60006040518083038185875af1925050503d80600081146104c8576040519150601f19603f3d011682016040523d82523d6000602084013e6104cd565b606091505b5050905080610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890610aed565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061058857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000806105d083610600565b90506000670de0b6b3a764000082866105e99190610b0d565b6105f39190610b96565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610c54565b5050509150506402540be400816106989190610ccf565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061094f601283610908565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ee826107d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a2157610a206109b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a76600083610a5b565b9150610a8182610a66565b600082019050919050565b6000610a9782610a69565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad7600b83610908565b9150610ae282610aa1565b602082019050919050565b60006020820190508181036000830152610b0681610aca565b9050919050565b6000610b18826107d7565b9150610b23836107d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5c57610b5b6109b4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba1826107d7565b9150610bac836107d7565b925082610bbc57610bbb610b67565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be681610bc7565b8114610bf157600080fd5b50565b600081519050610c0381610bdd565b92915050565b6000819050919050565b610c1c81610c09565b8114610c2757600080fd5b50565b600081519050610c3981610c13565b92915050565b600081519050610c4e816108af565b92915050565b600080600080600060a08688031215610c7057610c6f610747565b5b6000610c7e88828901610bf4565b9550506020610c8f88828901610c2a565b9450506040610ca088828901610c3f565b9350506060610cb188828901610c3f565b9250506080610cc288828901610bf4565b9150509295509295909350565b6000610cda82610c09565b9150610ce583610c09565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2457610d236109b4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6157610d606109b4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9e57610d9d6109b4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ddb57610dda6109b4565b5b82820290509291505056fea2646970667358221220bde5fce33b29ccabf10cc38f65e8ebc96b421af2dc7cf8022d7c3b8425d0df1964736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d5780633e47d6f3146100a4578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107aa565b610514565b6040516100d891906107f0565b60405180910390f35b3480156100ed57600080fd5b506100f661052c565b604051610103919061086a565b60405180910390f35b34801561011857600080fd5b50610121610552565b60405161012e9190610894565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108db565b610578565b6040516101759190610894565b60405180910390f35b34801561018a57600080fd5b506101936105b7565b6040516101a091906107f0565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c490919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610965565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610359576040517f0acc09c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040457600080828154811061037e5761037d610985565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fc906109e3565b91505061035c565b50600067ffffffffffffffff8111156104205761041f610a2c565b5b60405190808252806020026020018201604052801561044e5781602001602082028036833780820191505090505b50600090805190602001906104649291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048b90610a8c565b60006040518083038185875af1925050503d80600081146104c8576040519150601f19603f3d011682016040523d82523d6000602084013e6104cd565b606091505b5050905080610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890610aed565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061058857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000806105d083610600565b90506000670de0b6b3a764000082866105e99190610b0d565b6105f39190610b96565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610c54565b5050509150506402540be400816106989190610ccf565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061094f601283610908565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ee826107d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a2157610a206109b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a76600083610a5b565b9150610a8182610a66565b600082019050919050565b6000610a9782610a69565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad7600b83610908565b9150610ae282610aa1565b602082019050919050565b60006020820190508181036000830152610b0681610aca565b9050919050565b6000610b18826107d7565b9150610b23836107d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5c57610b5b6109b4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba1826107d7565b9150610bac836107d7565b925082610bbc57610bbb610b67565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be681610bc7565b8114610bf157600080fd5b50565b600081519050610c0381610bdd565b92915050565b6000819050919050565b610c1c81610c09565b8114610c2757600080fd5b50565b600081519050610c3981610c13565b92915050565b600081519050610c4e816108af565b92915050565b600080600080600060a08688031215610c7057610c6f610747565b5b6000610c7e88828901610bf4565b9550506020610c8f88828901610c2a565b9450506040610ca088828901610c3f565b9350506060610cb188828901610c3f565b9250506080610cc288828901610bf4565b9150509295509295909350565b6000610cda82610c09565b9150610ce583610c09565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2457610d236109b4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6157610d606109b4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9e57610d9d6109b4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ddb57610dda6109b4565b5b82820290509291505056fea2646970667358221220bde5fce33b29ccabf10cc38f65e8ebc96b421af2dc7cf8022d7c3b8425d0df1964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}